version: 2.1
jobs:
  build-x86_64:
    machine:
      image: ubuntu-2204:current
    resource_class: medium
    environment:
      - DOCKER_REPO: bjin/stack-docker:9.6.3
      - GHC_OPTIONS: --ghc-options -split-sections --ghc-options -O --ghc-options -optc-Os
    steps:
      - checkout
      - run:
          name: Prepare environment
          command: |
            docker pull "$DOCKER_REPO"
            docker create --name stack-docker "$DOCKER_REPO"
            docker cp stack-docker:/usr/local/bin/stack .
            docker rm stack-docker
            grep -F resolver stack.yaml | tee .stackage-resolver
      - restore_cache:
          name: Restore Cached Dependencies
          key: cci-dprox-x86_64-{{ checksum ".stackage-resolver" }}
      - run:
          name: Build
          command: |
            ./stack \
                --no-terminal --no-interleaved-output --system-ghc --no-install-ghc \
                --docker --docker-repo "$DOCKER_REPO" --docker-stack-exe image \
                install --flag dprox:static $GHC_OPTIONS
      - run:
          name: Run tests
          command: |
            ./stack \
                --no-terminal --no-interleaved-output --system-ghc --no-install-ghc \
                --docker --docker-repo "$DOCKER_REPO" --docker-stack-exe image \
                test --flag dprox:static $GHC_OPTIONS
      - run:
          name: Package executable
          command: |
            mkdir ~/release
            tar czvf "$HOME/release/dprox-$(git describe --tags | sed 's/^v//;s/-\([^-]*-g\)/-r\1/')-linux-x86_64-static.tar.gz" \
                -C .stack-work/docker/_home/.local/bin dprox
      - store_artifacts:
          path: ~/release
          destination: release
      - run:
          name: Cleanup
          command: |
            rm -rf ~/.stack/pantry
      - save_cache:
          name: Cache Dependencies
          key: cci-dprox-x86_64-{{ checksum ".stackage-resolver" }}
          paths:
            - ~/.stack
  build-aarch64:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.medium
    environment:
      - DOCKER_REPO: bjin/stack-docker-aarch64:9.6.3
      - GHC_OPTIONS: --ghc-options -split-sections --ghc-options -O --ghc-options -optc-Os
    steps:
      - checkout
      - run:
          name: Prepare environment
          command: |
            docker pull "$DOCKER_REPO"
            docker create --name stack-docker "$DOCKER_REPO"
            docker cp stack-docker:/usr/local/bin/stack .
            docker rm stack-docker
            grep -F resolver stack.yaml | tee .stackage-resolver
      - restore_cache:
          name: Restore Cached Dependencies
          key: cci-dprox-aarch64-{{ checksum ".stackage-resolver" }}
      - run:
          name: Build
          command: |
            ./stack \
                --no-terminal --no-interleaved-output --system-ghc --no-install-ghc \
                --docker --docker-repo "$DOCKER_REPO" --docker-stack-exe image \
                install --flag dprox:static $GHC_OPTIONS
      - run:
          name: Run tests
          command: |
            ./stack \
                --no-terminal --no-interleaved-output --system-ghc --no-install-ghc \
                --docker --docker-repo "$DOCKER_REPO" --docker-stack-exe image \
                test --flag dprox:static $GHC_OPTIONS
      - run:
          name: Package executable
          command: |
            mkdir ~/release
            tar czvf "$HOME/release/dprox-$(git describe --tags | sed 's/^v//;s/-\([^-]*-g\)/-r\1/')-linux-aarch64-static.tar.gz" \
                -C .stack-work/docker/_home/.local/bin dprox
      - store_artifacts:
          path: ~/release
          destination: release
      - run:
          name: Cleanup
          command: |
            rm -rf ~/.stack/pantry
      - save_cache:
          name: Cache Dependencies
          key: cci-dprox-aarch64-{{ checksum ".stackage-resolver" }}
          paths:
            - ~/.stack
  build-windows:
    machine:
      image: windows-server-2022-gui:current
      shell: bash.exe
    resource_class: windows.medium
    environment:
      - STACK_VER: 2.13.1
      - GHC_OPTIONS: --ghc-options -split-sections --ghc-options -O --ghc-options -optc-Os
    steps:
      - checkout
      - run:
          name: Generate .stackage-resolver
          command: |
            grep -F resolver stack.yaml | tee .stackage-resolver
      - restore_cache:
          name: Restore Cached Dependencies
          key: cci-dprox-windows-{{ checksum ".stackage-resolver" }}
      - run:
          name: Prepare environment
          command: |
            export STACK_BIN_URL="https://github.com/commercialhaskell/stack/releases/download/v${STACK_VER}/stack-${STACK_VER}-windows-x86_64.zip"
            curl -o ./stack.zip -L "$STACK_BIN_URL"
            7z x stack.zip stack.exe
            rm -f stack.zip
            ./stack.exe --skip-msys --ghc-variant int-native \
                setup
      - run:
          name: Build
          command: |
            ./stack.exe --skip-msys --ghc-variant int-native \
                --no-terminal --no-interleaved-output \
                install --flag dprox:static $GHC_OPTIONS
      - run:
          name: Run tests
          command: |
            ./stack.exe --skip-msys --ghc-variant int-native \
                --no-terminal --no-interleaved-output \
                test --flag dprox:static $GHC_OPTIONS
      - run:
          name: Package executable
          command: |
            mkdir ~/release
            7z a -tzip "$HOME/release/dprox-$(git describe --tags | sed 's/^v//;s/-\([^-]*-g\)/-r\1/')-windows-x86_64.zip" \
                "$HOME/AppData/Roaming/local/bin/dprox.exe"
      - store_artifacts:
          path: ~/release
          destination: release
      - run:
          name: Cleanup
          command: |
            rm -rf ~/AppData/Roaming/stack/pantry ~/AppData/Roaming/stack/programs
      - save_cache:
          name: Cache Dependencies
          key: cci-dprox-windows-{{ checksum ".stackage-resolver" }}
          paths:
            - ~/AppData/Roaming/stack
workflows:
  build:
    jobs:
      - build-x86_64
      - build-aarch64
      - build-windows
